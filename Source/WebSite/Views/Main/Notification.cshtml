@*******************************************************************************************************
//  Notification.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  03/03/2016 - Russell Robertson
//       Generated original version of source code.
//
//*****************************************************************************************************@
@using GSF.Web.Model
@using GSF
@using GSF.Security.Model
@using GSF.Web.Security
@using openSPM.Model
@model openSPM.Model.AppModel
@{
    DataContext dataContext = Model.DataContext;

    // Define column headers, use null for field name to make column non-sortable
    ViewBag.HeaderColumns = new[]
    {
        //    { "Field", "Label", "Classes" }
        new[] { "VendorPatchName", "Patch", "text-left" },
        new[] { "NoticeMethodkey", "Notice Method", "text-left"},
        new[] { "ToUsers", "Persons Notified", "text-left"},
        new[] { "SentOn", "Date Sent", "text-center" }
    };

    ViewBag.BodyRows = BodyRows().ToString();
    ViewBag.AddNewEditDialog = AddNewEditDialog(dataContext).ToString();
    ViewBag.AddNewEditTitle = "Notification Details";
    ViewBag.HideAddNewButton = true;
}
@helper PlanFilter()
{
    <div class='row'>
        <div class='col-md-12'>
            <div class='form-group'>
                <label for='planfilter'>Patch Filter:</label>
                <div class='right-inner-addon'>
                    <i class='glyphicon glyphicon-search'></i>
                    <input class='form-control' type='search' id='planfilter' placeholder='Search' />
                </div>
            </div>
        </div>
    </div>
}


@helper BodyRows()
{
    <td width="25%" class="text-left valign-middle"><button type="button" class="btn btn-link" data-bind="text: VendorPatchName, click: $parent.viewPageRecord"></button></td>
    <td width="15%" class="text-left valign-middle"><div nowrap data-bind="text: lookupNoticemethodValue(NoticeMethodKey)"></div></td>
    <td width="50%" class="text-left valign-middle"><div nowrap data-bind="text: ToUsers"></div></td>
    <td width="10%" class="text-center valign-middle"><div nowrap data-bind="text: SentOn.formatDate(DateFormat)"></div></td>
}
@helper AddNewEditDialog(DataContext dataContext)
{
    <div class="col-md-12" data-bind="">
        @Html.Raw(dataContext.AddInputField<NoticeLogView>("VendorPatchName"))
        @Html.Raw(Model.AddValueListSelectField<NoticeLogView>("NoticeMethodKey", "noticeMethod", fieldLabel: "Notice Method"))
        @Html.Raw(Model.AddValueListSelectField<NoticeLogView>("NoticeLevelKey", "noticeLevel", fieldLabel: "Notice Level"))
        @Html.Raw(dataContext.AddTextAreaField<NoticeLogView>("ToUsers"))
        @Html.Raw(dataContext.AddTextAreaField<NoticeLogView>("XcUsers"))
        @Html.Raw(dataContext.AddTextAreaField<NoticeLogView>("Text"))
        @Html.Raw(dataContext.AddDateField<NoticeLogView>("SentOn"))



    </div>

}
@Html.Partial("PagedViewModel")
@section Scripts {
    <script>
        @Html.Raw(Model.RenderViewModelConfiguration<NoticeLogView>(ViewBag))
        @Html.Raw(Model.RenderValueListClientLookupFunction("noticeMethod"))

        $(function () {

            $("#pageHeader").append("@Html.Raw(PlanFilter().ToString().RemoveDuplicateWhiteSpace().Replace("\r\n", ""))");

            $('#planfilter').on('keyup', function (e) {
                if ($('#planfilter').val().length == 0) {
                    viewModel.filterText = '%';
                    viewModel.filterPageRecords();
                } else {
                    viewModel.filterText = $('#planfilter').val();
                    viewModel.filterPageRecords();

                }

            });

        });

    </script>
}






