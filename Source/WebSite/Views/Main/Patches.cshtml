@*******************************************************************************************************
//  Patches.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  02/20/2016 - Ritchie Carroll
//       Generated original version of source code.
//
//*****************************************************************************************************@
@using GSF
@using GSF.Web.Model
@using openSPM.Model
@model openSPM.Model.AppModel
@{
    DataContext dataContext = Model.DataContext;

    // Define column headers, use null for field name to make column non-sortable
    ViewBag.HeaderColumns = new[]
    {   //    { "Field", "Label", "Classes" }
        new[] { null, "Status", "text-center valign-middle" },
        new[] { "PatchMnemonic", "SPM&nbsp;Reference", "text-center" },
        new[] { "ImpactKey", "Impact", "text-center" },
        new[] { "Title", "Title", "text-left" },
        new[] { null, "Patch&nbsp;Status", "text-center valign-middle" },
        new[] { "VendorReleaseDate", "Release&nbsp;Date", "text-center" },
        new[] { null, "Documents", "text-center valign-middle" }
    };

    ViewBag.HideAddNewButton = true;
    ViewBag.HideUnauthorizedControls = true;

    ViewBag.BodyRows = BodyRows().ToString();
    ViewBag.AddNewEditDialog = AddNewEditDialog(dataContext).ToString();
    ViewBag.AddNewEditTitle = "Patch for Assesment";
}
@helper BodyRows()
{
    string statusLightsImagePath = Model.GetPageSetting(ViewBag, "statusLightsImagePath", "~/Images/StatusLights/Small/");
    statusLightsImagePath = Url.Content(statusLightsImagePath).EnsureEnd('/');

    <td width="5%" class="text-center valign-middle"><img src="@(statusLightsImagePath)greenlight.png" alt="Enabled" data-bind="visible: IsNotCompliance"><img src="@(statusLightsImagePath)disabledlight.png" alt="Disabled" data-bind="visible: !IsNotCompliance"></td>
    <td width="15%" class="text-center valign-middle" nowrap><button type="button" class="btn btn-link" data-bind="text: PatchMnemonic, click: $parent.viewPageRecord"></button></td>
    <td width="10%" class="text-center valign-middle" data-bind="text: lookupImpactValue(ImpactKey)"></td>
    <td width="40%" class="text-left table-cell-hard-wrap"><div data-bind="text: $($element.parentElement).truncateToWidth(Title, 1.5), attr: {title: Title}"></div></td>
    <td width="10%" class="text-center valign-middle"><button type="button" class="btn btn-danger btn-sm">Start...</button></td>
    <td width="10%" class="text-center valign-middle" data-bind="text: VendorReleaseDate.formatDate(DateFormat)"></td>
    <td width="5%" class="text-center valign-middle"><button type="button" class="btn btn-default btn-sm" data-bind="click: openManageDocumentsDialog.bind($data), enable: $parent.dataHubIsConnected">Docs&nbsp;&nbsp;<span class="badge" data-bind="text: getDocumentCount(ID, $($element)), attr: {id: 'documentCount' + ID}">0</span></button></td>
    <td width="5%" class="text-center valign-middle" nowrap>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.editPageRecord, enable: $parent.canEdit() && $parent.dataHubIsConnected()"><span class="glyphicon glyphicon-pencil"></span></button>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.removePageRecord, enable: $parent.canDelete() && $parent.dataHubIsConnected()"><span class="glyphicon glyphicon-remove"></span></button>
    </td>
}
@helper AddNewEditDialog(DataContext dataContext)
{
    int defaultCriticalAlarmDays;
    string setting;

    // Get default critical alarm days
    if (!Model.Global.ApplicationSettings.TryGetValue("criticalAlarmDays", out setting) || !int.TryParse(setting, out defaultCriticalAlarmDays)) {
        defaultCriticalAlarmDays = 3;
    }

    // Validate default value
    defaultCriticalAlarmDays = Math.Abs(defaultCriticalAlarmDays);

    if (defaultCriticalAlarmDays < 2 || defaultCriticalAlarmDays > 9) {
        defaultCriticalAlarmDays = 3;
    }

    <div class="col-md-4">
        @Html.Raw(dataContext.AddInputField<Patch>("PatchMnemonic", initialFocus: true))
        @*@Html.Raw(dataContext.AddSelectField<Patch, Patch>("ParentID", "ID", "PatchReference"))*@
        @Html.Raw(dataContext.AddSelectField<Patch, Vendor>("VendorID", "ID", "Name", "Name"))
        @Html.Raw(dataContext.AddInputField<Patch>("VendorPatchName"))
        @Html.Raw(dataContext.AddDateField<Patch>("VendorReleaseDate"))
        @Html.Raw(Model.AddValueListSelectField<Patch>("ImpactKey", "impact"))
    </div>
    <div class="col-md-4">
        @Html.Raw(dataContext.AddInputField<Patch>("Title"))
        @Html.Raw(dataContext.AddSelectField<Patch, Platform>("PlatformID", "ID", "Name", "Name"))
        @Html.Raw(dataContext.AddTextAreaField<Patch>("Summary"))
        @Html.Raw(dataContext.AddTextAreaField<Patch>("Detail", 3))
        @Html.Raw(dataContext.AddTextAreaField<Patch>("Citations"))
    </div>
    <div class="col-md-4">
        @Html.Raw(dataContext.AddTextAreaField<Patch>("WorkArounds"))
        @Html.Raw(dataContext.AddInputField<Patch>("Link", "url"))
        @Html.Raw(dataContext.AddInputField<Patch>("AlarmCriticalDays"))
        @{
            dataContext.AddPageDefinedFieldInitialization("AlarmCriticalDays",
                /* Initial Value: */ defaultCriticalAlarmDays.ToString(),
                /* RegEx Pattern: */ $"^[{defaultCriticalAlarmDays}-9]+$",
                /* Error Message: */ $"Cannot be less than {defaultCriticalAlarmDays} or greater than 9.");
        }
        @Html.Raw(dataContext.AddCheckBoxField<Patch>("IsNotCompliance"))
    </div>
}
@Html.Partial("PagedViewModel")
<div id="manageDocumentsDialog" class="modal modal-wide fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <iframe style="border: none" id="manageDocumentsFrame"></iframe>
                <button type="button" class="btn btn-default pull-right popup-ok-button" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        @Html.Raw(Model.RenderViewModelConfiguration<Patch>(ViewBag))
        @Html.Raw(Model.RenderValueListClientLookupFunction("impact"))

        function getDocumentCount(sourceID, element) {
            if (viewModel.dataHubIsConnected()) {
                dataHub.queryDocumentDetailCount("Patch", sourceID).done(function (count) {
                    $("#documentCount" + sourceID).text(count.toString());
                });
            }

            return element.text();
        }

        $(window).resize(function () {
            setTimeout(function () {
                $("#manageDocumentsFrame").attr("height", ($(document).height() - 150) + "px");
            }, 500);
        });

        function openManageDocumentsDialog(record) {
            $("#manageDocumentsFrame").attr({
                "src": "@Url.Content("~/Main/Documents")?SourceTable=PatchDocument&SourceField=PatchID&SourceID=" + record.ID + "&Name=" + encodeURIComponent(record.PatchMnemonic),
                "height": ($(document).height() - 150) + "px",
                "width": "100%"
            });

            $("#manageDocumentsDialog").modal("show");
        }

        $("#manageDocumentsDialog").on("hidden.bs.modal", function () {
            // Refresh page counts after editing tasks
            viewModel.queryPageRecords();

            // Clear frame page
            $("#manageDocumentsFrame").attr("src", "about:blank");
        });

        $(function() {
            $("#manageDocumentsDialog").modal({ show: false, backdrop: "static", keyboard: false });
        });
    </script>
}