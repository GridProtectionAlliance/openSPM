@*******************************************************************************************************
//  Install.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  03/03/2016 - Russell Robertson
//       Generated original version of source code.
//
//*****************************************************************************************************@
@using GSF.Web.Model
@using openSPM.Model
@using GSF
@model openSPM.Model.AppModel
@{
    DataContext dataContext = Model.DataContext;
    // TODO: Add examples of how to get to settings
}

@*<table class="table">
    <thead>
        <tr>
            <th>&nbsp;</th>
            <th>Required Fields</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>1</td>
            <td>Patch Identifer</td>
        </tr>
        <tr>
            <td>2</td>
            <td>Summary</td>
        </tr>
        <tr>
            <td>3</td>
            <td>Completion Date</td>
        </tr>
       
    </tbody>
</table>
<p>&nbsp;</p>
<table class="table">
    <thead>
    <tr>
        <th>&nbsp;</th>
        <th>Optional Fields</th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td>1</td>
        <td>Installation Notes</td>
    </tr>
    <tr>
        <td>2</td>
        <td>Description</td>
    </tr>

    </tbody>
</table>*@


@{
    ViewBag.HeaderColumns = new[]
{
        //    { "Field", "Label", "Classes" }
        new[] { "PatchID", "SPM Reference", "text-left" },
        new[] { "Summary", "Summary", "text-left"},
        new[] { "CompletedNotes", "Installation Notes", "text-left"},
        new[] { "CompletedOn", "Completion Date", "text-left"},
        new[] { null, "Documents", "text-center"}
    };

    ViewBag.BodyRows = BodyRows().ToString();
    ViewBag.AddNewEditDialog = AddNewEditDialog(dataContext).ToString();
    ViewBag.AddNewEditTitle = "Install";
    ViewBag.HideAddNewButton = true;
}
@helper BodyRows()
{

    
    <td width="15%" class="text-left valign-middle"><button type="button" class="btn btn-link" data-bind="text: lookupVendorPatchNameValue(PatchID), click: $parent.viewPageRecord"></button></td>
    <td width="30%" class="text-left valign-middle"><div nowrap data-bind="text: Summary"></div></td>
    <td width="30%" class="text-left valign-middle"><div nowrap data-bind="text: CompletedNotes"></div></td>
    <td width="10%" class="text-left valign-middle"><div nowrap data-bind="text: CompletedOn.formatDate(DateFormat)"></div></td>
    <td width="5%" class="text-center valign-middle"><button type="button" class="btn btn-default btn-sm" data-bind="click: openManageDocumentsDialog.bind($data), enable: $parent.dataHubIsConnected">Docs&nbsp;&nbsp;<span class="badge" data-bind="text: getDocumentCount(ID, $($element)), attr: {id: 'documentCount' + ID}">0</span></button></td>
    <td width="5%" class="text-center valign-middle" nowrap>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.editPageRecord, enable: $parent.canEdit() && $parent.dataHubIsConnected()"><span class="glyphicon glyphicon-pencil"></span></button>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.removePageRecord, enable: $parent.canDelete() && $parent.dataHubIsConnected()"><span class="glyphicon glyphicon-remove"></span></button>
    </td>
}

@helper AddNewEditDialog(DataContext dataContext)
{

    <div class="col-md-12">
        <label for="editPatchID">PatchID:</label>
        <div id="editPatchID" data-bind="text: ID"></div><br/>
        @Html.Raw(dataContext.AddTextAreaField<Install>("Summary"))
        @Html.Raw(dataContext.AddTextAreaField<Install>("CompletedNotes"))
        @Html.Raw(dataContext.AddDateField<Install>("CompletedOn"))


    </div>
}
@Html.Partial("PagedViewModel")

<div id="manageDocumentsDialog" class="modal modal-wide fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <iframe style="border: none" id="manageDocumentsFrame"></iframe>
                <button type="button" class="btn btn-default pull-right popup-ok-button" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        @Html.Raw(Model.RenderViewModelConfiguration<Install>(ViewBag))
        @Html.Raw(Model.RenderAbstract<Patch>("VendorPatchName"))


        $(function () {
            $("#manageDocumentsDialog").modal({ show: false, backdrop: "static", keyboard: false });
        });
        
       function getDocumentCount(sourceID, element) {
           if (viewModel.dataHubIsConnected()) {
               dataHub.queryDocumentDetailCount("Install", sourceID).done(function (count) {
                   $("#documentCount" + sourceID).text(count.toString());
               });
           }

           return element.text();
       }

       $(window).resize(function () {
           setTimeout(function () {
               $("#manageDocumentsFrame").attr("height", ($(document).height() - 150) + "px");
           }, 500);
       });

       function openManageDocumentsDialog(record) {
           const count = parseInt(notNull($("#documentCount" + record.ID).text(), 0));
           var initialMode = "";

           if (count < 1)
               initialMode = "/AddNew";

           $("#manageDocumentsFrame").attr({
               "src": "@Url.Content("~/Main/Documents")" + initialMode + "?SourceTable=Install&SourceField=InstallID&SourceID=" + record.ID + "&Name=" + encodeURIComponent(record.PatchMnemonic),
               "height": ($(document).height() - 150) + "px",
               "width": "100%"
       });

       $("#manageDocumentsDialog").modal("show");
       }

       $("#manageDocumentsDialog").on("hidden.bs.modal", function () {
           // Refresh page counts after editing tasks
           viewModel.queryPageRecords();

           // Clear frame page
           $("#manageDocumentsFrame").attr("src", "about:blank");
       });
        
    </script>
}


