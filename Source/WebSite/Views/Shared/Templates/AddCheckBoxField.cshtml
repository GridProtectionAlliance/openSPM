@*******************************************************************************************************
//  AddCheckBoxField.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may
//  not use this file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  02/01/2016 - J. Ritchie Carroll
//       Generated original version of source code.
//
//*****************************************************************************************************@
@using System.Collections.Generic
@using openSPM.Models
@using RazorEngine.Templating
@inherits TemplateBase<AppModel>
@{
    string fieldName = ViewBag.FieldName;
    string fieldLabel = ViewBag.FieldLabel;
    string fieldID = ViewBag.FieldID;
    string groupDataBinding = ViewBag.GroupDataBinding;
    string labelDataBinding = ViewBag.LabelDataBinding;
    string customDataBinding = ViewBag.CustomDataBinding;
    string dependencyFieldName = ViewBag.DependencyFieldName;
    string toolTip = ViewBag.ToolTip;

    if (!string.IsNullOrEmpty(dependencyFieldName)) {
        if (string.IsNullOrEmpty(customDataBinding)) {
            customDataBinding = string.Format("enable: {0}", dependencyFieldName);
        }

        if (string.IsNullOrEmpty(labelDataBinding)) {
            labelDataBinding = string.Format("css: {{disabled: !{0}()}}", dependencyFieldName);
        }
    }

    if (!string.IsNullOrEmpty(groupDataBinding)) {
        groupDataBinding = string.Format(" data-bind=\"{0}\"", groupDataBinding);
    }

    if (!string.IsNullOrEmpty(labelDataBinding)) {
        labelDataBinding = string.Format(" data-bind=\"{0}\"", labelDataBinding);
    }

    if (!string.IsNullOrEmpty(customDataBinding)) {
        customDataBinding = string.Format(", {0}", customDataBinding);
    }

    if (!string.IsNullOrEmpty(toolTip)) {
        toolTip = string.Format(" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"{0}\"", toolTip);
    }
}
<div class="checkbox"@Raw(groupDataBinding)@Raw(toolTip)>
    <label for="@Raw(fieldID)"@Raw(labelDataBinding)><input type="checkbox" id="@Raw(fieldID)" data-bind="checked: @Raw(fieldName), attr: {'disabled': ($root.recordMode()===RecordMode.View ? true : undefined)}@Raw(customDataBinding)"> @Raw(fieldLabel)</label>
</div>
